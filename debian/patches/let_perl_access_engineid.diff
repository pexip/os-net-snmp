Index: net-snmp-5.7.2.1+dfsg/perl/SNMP/SNMP.pm
===================================================================
--- net-snmp-5.7.2.1+dfsg.orig/perl/SNMP/SNMP.pm
+++ net-snmp-5.7.2.1+dfsg/perl/SNMP/SNMP.pm
@@ -1238,6 +1238,16 @@ sub inform {
    return(wantarray() ? @res : $res[0]);
 }
 
+sub get_sec_engine_id {
+   my $this = shift;
+   return SNMP::_get_sec_engine_id($this);
+}
+
+sub get_context_engine_id {
+   my $this = shift;
+   return SNMP::_get_context_engine_id($this);
+}
+
 package SNMP::TrapSession;
 @SNMP::TrapSession::ISA = ('SNMP::Session');
 
@@ -2034,6 +2044,17 @@ as well.
 
 =back
 
+=item $sess->get_sec_engine_id
+
+Returns the security engine ID for the current session, whether probed
+or provided by the client, in hex format suitable for the SecEngineId
+parameter when creating a session in the future. Returns undef if we have not
+had not had any contact with the remote agent yet.
+
+=item $sess->get_context_engine_id
+
+Like get_sec_engine_id, but for the context engine ID (ContextEngineId).
+
 =back
 
 =head1 SNMP::TrapSession
Index: net-snmp-5.7.2.1+dfsg/perl/SNMP/SNMP.xs
===================================================================
--- net-snmp-5.7.2.1+dfsg.orig/perl/SNMP/SNMP.xs
+++ net-snmp-5.7.2.1+dfsg/perl/SNMP/SNMP.xs
@@ -4741,6 +4741,50 @@ done:
 
 
 char *
+snmp_get_sec_engine_id(sess_ref)
+        SV *	sess_ref
+	CODE:
+	{
+           RETVAL = NULL;
+           if (SvROK(sess_ref)) {
+              SV **sess_ptr_sv = hv_fetch((HV*)SvRV(sess_ref), "SessPtr", 7, 1);
+	      SnmpSession *ss = (SnmpSession *)SvIV((SV*)SvRV(*sess_ptr_sv));
+              if (ss->securityEngineIDLen > 0) {
+                 binary_to_hex(ss->securityEngineID,
+                               ss->securityEngineIDLen,
+                               &RETVAL);
+              }
+           }
+	}
+	OUTPUT:
+        RETVAL
+        CLEANUP:
+        netsnmp_free(RETVAL);
+
+
+char *
+snmp_get_context_engine_id(sess_ref)
+        SV *	sess_ref
+	CODE:
+	{
+           RETVAL = NULL;
+           if (SvROK(sess_ref)) {
+              SV **sess_ptr_sv = hv_fetch((HV*)SvRV(sess_ref), "SessPtr", 7, 1);
+	      SnmpSession *ss = (SnmpSession *)SvIV((SV*)SvRV(*sess_ptr_sv));
+              if (ss->contextEngineIDLen > 0) {
+                 binary_to_hex(ss->contextEngineID,
+                               ss->contextEngineIDLen,
+                               &RETVAL);
+              }
+           }
+	}
+	OUTPUT:
+        RETVAL
+        CLEANUP:
+        netsnmp_free(RETVAL);
+
+
+char *
 snmp_get_type(tag, best_guess)
 	char *		tag
         int             best_guess
